{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/cobtansleyback/cobtansleyback.component.css","webpack:///./src/app/components/cobtansleyback/cobtansleyback.component.html","webpack:///./src/app/components/cobtansleyback/cobtansleyback.component.ts","webpack:///./src/app/components/cobtansleyfrnt/cobtansleyfrnt.component.css","webpack:///./src/app/components/cobtansleyfrnt/cobtansleyfrnt.component.html","webpack:///./src/app/components/cobtansleyfrnt/cobtansleyfrnt.component.ts","webpack:///./src/app/components/mainback/mainback.component.css","webpack:///./src/app/components/mainback/mainback.component.html","webpack:///./src/app/components/mainback/mainback.component.ts","webpack:///./src/app/services/adddata.service.ts","webpack:///./src/app/services/getdata.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet ></router-outlet>\\n<!-- (activate)=\\\"routeChanged()\\\" -->\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { CobtansleyfrntComponent } from './components/cobtansleyfrnt/cobtansleyfrnt.component';\nimport { CobtansleybackComponent } from './components/cobtansleyback/cobtansleyback.component';\nimport { MainbackComponent } from './components/mainback/mainback.component';\nimport { GetdataService } from './services/getdata.service';\nimport {MatButtonModule, MatCheckboxModule, MatToolbarModule} from '@angular/material';\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\nimport { DROPZONE_CONFIG } from 'ngx-dropzone-wrapper';\nimport { DropzoneConfigInterface } from 'ngx-dropzone-wrapper';\n\nimport { HttpHeaders,HttpClient, HttpClientModule } from 'node_modules/@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\nimport { AdddataService } from './services/adddata.service';\n\nconst appRoutes: Routes = [\n  //, canActivate:[AuthGuard]\n    { path: 'bemain', component: MainbackComponent,\n      children: [\n        //  { path: 'login', component: CobtansleybackComponent},\n         { path:'cobtansleyback', component: CobtansleybackComponent},\n         { path: '**', redirectTo: 'login' }\n      ]\n    },\n    { path: 'cobtansleyfront', component: CobtansleyfrntComponent},\n    { path: '**', redirectTo: 'bemain'}\n  \n  ]\n\n  const DEFAULT_DROPZONE_CONFIG: DropzoneConfigInterface = {\n    // Change this to your upload POST address:\n     url: '/additems/csvupload',\n     maxFilesize: 5,\n     autoReset:1,\n     maxFiles:1,\n     acceptedFiles: '.csv'\n   };\n   \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CobtansleyfrntComponent,\n    CobtansleybackComponent,\n    MainbackComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    HttpModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatToolbarModule,\n    DropzoneModule,\n    FormsModule\n  ],\n  providers: [GetdataService,AdddataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\r\\n.custom-file-upload {\\r\\n    border: 2px dashed #1A237E;\\r\\n    display: inline-block;\\r\\n    padding: 6px 12px;\\r\\n    cursor: pointer;\\r\\n    color:black;\\r\\n    line-height: 50px;\\r\\n    font-size: 2.0em;\\r\\n}\\r\\ninput[type=\\\"file\\\"] {\\r\\n    display: none;\\r\\n}\\r\\n.full-width {\\r\\n  width: 100vw;\\r\\n  position: relative;\\r\\n  left: 50%;\\r\\n  right: 50%;\\r\\n  margin-left: -50vw;\\r\\n  margin-right: -50vw;\\r\\n}\"","module.exports = \"\\n<br><br><br><br>\\n<div class=\\\"center\\\">\\n    <form id = \\\"formNewCSV\\\" name =\\\"formNewCSV\\\" #CSVData = \\\"ngForm\\\" >\\n        <label class=\\\"custom-file-upload\\\"> Click to add COB Tansley CSV file\\n        <input id=\\\"image\\\" name=\\\"image\\\" type=\\\"file\\\" (change)=\\\"addCSV();CSVData.reset() \\\" placeholder=\\\"Upload a file...\\\" multiple ngModel/>\\n      </label>\\n      <br><br>\\n      </form>\\n    </div>\\n\\n\\n    \\n\"","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { AdddataService } from '../../services/adddata.service';\n\n@Component({\n  selector: 'app-cobtansleyback',\n  templateUrl: './cobtansleyback.component.html',\n  styleUrls: ['./cobtansleyback.component.css']\n})\nexport class CobtansleybackComponent implements OnInit {\n\n  constructor(private elem:ElementRef, private adddataService:AdddataService) { }\n\n  ngOnInit() {\n  }\n\n  onUploadSuccess(event){\n    console.log(event);\n  }\n\n  onUploadError(event){\n    console.log(event);\n\n  }\n\n   public addCSV(): void{\n\n          let files = this.elem.nativeElement.querySelector('#image').files;\n          \n          let formData = new FormData();\n          console.log(files[0]);\n          formData.append('bodydummy',\"dummy\")\n          formData.append('image',files[0],files[0].name);\n          \n          var json_arr = JSON.stringify(formData);\n          console.log(formData);\n          this.adddataService.sendCSV(formData).subscribe(res => {alert(\"File uploaded\");});\n          // for(let i =0; i < files.length; i++){\n          //       formData.append('image',files[i],files[i].name);\n          //       console.log(\"appended \"+files[i].name);\n          // }\n\n          // var json_arr = JSON.stringify(formData);\n        // console.log(\"JSON: \"+json_arr);\n        //   this.adddataService.addGallery(formData).subscribe\n        //   (res =>{ alert(\"Images are uploaded to Gallery.\" );\n\n\n        // }\n        //  );\n\n        }\n\n}\n","module.exports = \"table{\\r\\n    font-size:2.2em;\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"<table>\\n  <tr>\\n    <td>Date</td>\\n    <td>Start</td>\\n    <td>End</td>\\n    <td>Facility</td>\\n    <td>Service</td>\\n  </tr>\\n  <tr *ngFor=\\\"let item of this.csvgetdata\\\">\\n    <td>{{item.Date}}</td>\\n    <td>{{item.StartTime}}</td>\\n    <td>{{item.EndTime}}</td>\\n    <td>{{item.Facility}}</td>\\n    <td>{{item.Service}}</td>\\n  </tr>\\n</table>\\n\"","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { GetdataService } from '../../services/getdata.service';\n\n@Component({\n  selector: 'app-cobtansleyfrnt',\n  templateUrl: './cobtansleyfrnt.component.html',\n  styleUrls: ['./cobtansleyfrnt.component.css']\n})\nexport class CobtansleyfrntComponent implements OnInit {\n\n  csvgetdata;\n\n  constructor(private getDataService:GetdataService) { \n    setInterval(() => {\n      this.refreshData();\n    }, 5000);\n  }\n\n  ngOnInit() {\n    console.log(\"data\")\n  this.refreshData();\n  }\n\n  refreshData(){\n    this.getDataService.getTansleyCSVData(`/csvgets/csvgets`).map(response => response.json()).subscribe(data =>{\n      console.log(data);\n      this.csvgetdata = data;\n\n    });\n  }\n\n}\n","module.exports = \".toolbar_spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <mat-toolbar-row>\\r\\n        <span>COB Tansley Schedule</span>\\r\\n        <span class=\\\"toolbar_spacer\\\"></span>\\r\\n        <!-- <button mat-button [routerLink]=\\\"['/bemenu/login']\\\" *ngIf=\\\"!isLoggednIn\\\">login</button> -->\\r\\n        <button mat-button>logout</button> \\r\\n        <!-- <button mat-button (click)=\\\"onLogout()\\\" *ngIf=\\\"authenticationService.loggedIn()\\\">logout</button> -->\\r\\n    </mat-toolbar-row>\\r\\n\\r\\n</mat-toolbar>\\r\\n<br>\\r\\n<div class=\\\"container\\\"><router-outlet ></router-outlet></div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mainback',\n  templateUrl: './mainback.component.html',\n  styleUrls: ['./mainback.component.css']\n})\nexport class MainbackComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Http} from '@angular/http';\n\n\nimport {Observable} from 'rxjs/Observable'\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport { HttpHeaders,HttpClient, HttpClientModule } from '../../../node_modules/@angular/common/http';\nimport {  } from '../../../node_modules/@types/selenium-webdriver/http';\n\n@Injectable()\nexport class AdddataService {\n\n  constructor(private http:HttpClient) { }\n\n  sendCSV(formdata:any){\n    let _url:string = \"/additems/csvupload\";\n    return this.http.post(_url,formdata)\n    .catch(this._errorHandler);\n  }\n\n  setMenu(url,data){\n     //let _url:string = \"/api/menus\";\n     console.log(url, data);\n     const headers = new HttpHeaders ({\n       'Content-type' : 'application/json'\n     });\n     return this.http.put(url,data,{headers:headers});\n     \n   }\n\n   _errorHandler(error: Response){\n     console.error('Error occured: ' +error);\n     return Observable.throw(error||'some error on server occured');\n   }\n}\n","import { Injectable } from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class GetdataService {\n\n\n  constructor(private http:Http){  }\n\n    getTansleyCSVData(url){\n      return this.http.get(url)\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}